#include "trojan.h"
#include <stdlib.h>
#include <stdio.h>
#include <iostream> 
#include <math.h>

using namespace std;

Trojan::Trojan(void) {
    m_tset = 0;
    CBitStream m_data_stream = CBitStream();
    CBitStream m_trans_stream = CBitStream();
}

Trojan::~Trojan(void) {
    
}

void Trojan::GenStream(int n) {
    for(int i = 0; i < n; i++) {
        WORD value = {'0','1','0'};
        //for(int j = 0; j < WORDLEN; j++) {
        //    char randbit = (char) rand()%2;
        //    value[j] = randbit;
        //}
        m_data_stream.WriteWord(value);
    }
    printf("Target Stream generated by Trojan as follows: ");
    fflush(stdout);
    m_data_stream.PrintStream();
}

WORD* Trojan::GetData() {
    m_curr_data = m_data_stream.ReadNextWord();
    printf("Trojan Get Data: read curr data\n");
    //fflush(stdout);
    if(m_curr_data == NULL){
        return NULL;
    }

      printf("Trojan Get Data:NULL \n");
    //fflush(stdout);
    m_curr_size_idx = 0;
    for(int i = 0; i < WORDLEN; i++){
        if(m_curr_data[i] == "1") {
            m_curr_size_idx += pow(2,WORDLEN-i-1);
        }
    }
    printf("Trojan: Sending data = ");
    //fflush(stdout);
    for(int i = 0; i < WORDLEN; i++) {
        cout << m_curr_data[i];
    }
    return m_curr_data;
}

void Trojan::SetTargetSet(long set) {
    m_tset = set;
}

void Trojan::AccessSet() {
    int size = sizes[m_curr_size_idx];
    PrimeSetWithSize(m_tset, size);
}

void Trojan::TransmissionAck() {
    m_trans_stream.WriteWord(*m_curr_data);
}
